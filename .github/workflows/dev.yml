

on:
  push:
    branches: [main] # branch to run this
    
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

name: build
jobs:
  build:
    runs-on: windows-latest # tells github where to build 

    #strategy:
      #matrix:
        #node-version: [8.x, 10.x, 12.x]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Node setup
        uses: actions/setup-node@v1
        with:
          node-version: 12
    
      #- name: Configure AWS
        #uses: aws-actions/configure-aws-credentials@v1
        #with: 
          #aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          #aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: s3deploymentrolesession
          aws-region: ${{ secrets.AWS_REGION }}

      #- name: npm install jquery for bootstrap
      #  run: npm i jquery@1.9.1
      
      - name: npm config set package-lock true # set to true to generate package-lock.json on npm install
        run: npm config set package-lock true

      - name: npm install # install dependencies
        run: npm i

      - name: npm install app
        run:  cd ./app && npm i

      #- name: npm fix
      #  run: npm audit fix

      #- name: move to app folder
        #run: | 
          #cd ./app
      - name: npm ci
        run: npm ci --prefix ./app

      - name: build
        run: npm --prefix ./app run build

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: "buildArtifact"
          path: ./app/build

  sonarqube:
    name: SonarQube Trigger
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@master
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@v1.2.0
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONARQUBE_TOKEN }}
        # Check the Quality Gate status.
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time.
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
       SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }} #OPTIONAL

  publish:
    name: Publish to S3
    needs: sonarqube
    runs-on: windows-latest
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: "buildArtifact"
          path: "buildArtifact"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: s3deploymentrolesession
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: copy files to s3
        run: aws s3 sync ./buildArtifact s3://samuraics.net

      - name: Invalidate cache
        run: |
          aws cloudfront create-invalidation `
            --distribution-id ERHJO8ZJSBPRD `
            --paths "/*"
